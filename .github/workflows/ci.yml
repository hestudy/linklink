name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test and Lint
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [20.x]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.2.18'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Setup environment files
        run: |
          cp .env.example .env
          cp apps/web/.env.example apps/web/.env
          cp apps/server/.env.example apps/server/.env
          cp apps/extension/.env.example apps/extension/.env
      - name: Precheck server types (tsc -b)
        run: bun run -F server check-types

      - name: Run type checking
        run: bun run type-check

      - name: Run linting
        run: bun run lint

      - name: Run tests
        run: bun run test

      - name: Build applications
        run: bun run build

      - name: Smoke check (artifacts and Bun version)
        run: |
          node -e "const fs=require('fs'); const paths=['apps/web/dist','apps/server/dist','apps/extension/.output']; const missing=paths.filter(p=>!fs.existsSync(p)); if(missing.length){console.error('Missing build outputs:', missing.join(', ')); process.exit(1)} console.log('✅ Build artifacts present')"
          node -e "const {execSync}=require('child_process'); const v=execSync('bun --version',{encoding:'utf8'}).trim(); if(v!=='1.2.18'){console.error('Bun version mismatch:', v, '!= 1.2.18'); process.exit(1)} console.log('✅ Bun version locked to 1.2.18')"

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.2.18'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run security audit
        run: bun audit || true

  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.2.18'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Setup environment files
        run: |
          cp .env.example .env
          cp apps/web/.env.example apps/web/.env
          cp apps/server/.env.example apps/server/.env
          cp apps/extension/.env.example apps/extension/.env

      - name: Build applications
        run: bun run build

      - name: Smoke check (artifacts)
        run: |
          node -e "const fs=require('fs'); const paths=['apps/web/dist','apps/server/dist','apps/extension/.output']; const missing=paths.filter(p=>!fs.existsSync(p)); if(missing.length){console.error('Missing build outputs:', missing.join(', ')); process.exit(1)} console.log('✅ Build artifacts present')"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            apps/web/dist/
            apps/server/dist/
            apps/extension/.output/
